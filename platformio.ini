; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = sdl_lcd_client

[env]
build_flags = 
	-DLV_FONT_MONTSERRAT_20=1
	-DLV_THEME_DEFAULT_DARK=1
	
	-DLV_CONF_INCLUDE_SIMPLE
	-DLV_LVGL_H_INCLUDE_SIMPLE
	-DLV_CONF_SKIP
	-DLV_LOG_LEVEL=LV_LOG_LEVEL_NONE
	-DLV_USE_VECTOR_GRAPHIC=1
	-DLV_USE_SVG=1
	-DLV_USE_MATRIX=1
	-DLV_USE_FLOAT
build_src_filter = 
	-<.git/>
	-<.svn/>
lib_deps = 
	lvgl/lvgl@9.3
	bblanchon/ArduinoJson@6.21.4

[env:cyd]
platform = espressif32 @ 6.10.0
board = esp32dev
framework = arduino
platform_packages = 
	platformio/framework-arduinoespressif32@3.20017.241212+sha.dcc1105b
	toolchain-xtensa-esp32 @12.2.0+20230208
	platformio/tool-openocd-esp32@^2.1200.20230419
	platformio/tool-mkspiffs@^1.200.0
lib_deps = 
	${env.lib_deps}
	ropg/LVGL_CYD@^1.2.2
	
build_flags = 
	${env.build_flags}
	-DILI9341_DRIVER
	-DLV_USE_TFT_ESPI
	-DUSER_SETUP_LOADED
	-DUSE_HSPI_PORT
	
	-DTFT_WIDTH=240
	-DTFT_HEIGHT=320
	-DTFT_MISO=12
	-DTFT_MOSI=13
	-DTFT_SCLK=14
	-DTFT_CS=15
	-DTFT_DC=2
	-DTFT_RST=-1
	-DTFT_BL=27
	-DTOUCH_CS=33
	-TP_INT=-1
	-DTFT_BACKLIGHT_ON=HIGH
	-DSPI_FREQUENCY=80000000
	-DSPI_READ_FREQUENCY=80000000
	-DSPI_TOUCH_FREQUENCY=2500000
	
	!python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/esp32')]))"

board_build.f_cpu = 240000000
monitor_speed = 115200
upload_protocol = esptool
upload_speed = 921600

[env:cyd_serverless]
extends = env:cyd
build_src_filter = 
	${env.build_src_filter}
	+<../src/application/client/>
	+<../src/application/server/>	
	+<../src/platform/cyd/serverless/>

lib_deps = 
	${env:cyd.lib_deps}
	adafruit/RTClib@^2.1.4

[env:sdl_lcd_client]
platform = native@^1.1.3
extra_scripts = 
	pre:support/sdl2_paths.py
	post:support/sdl2_build_extra.py
build_flags = 
	${env.build_flags}
	-D LV_LOG_PRINTF=1
	!python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/sdl2')]))"
	-lSDL2
	
	-DLV_DRV_NO_CONF
	-DLV_USE_SDL
	-DSDL_HOR_RES=240
	-DSDL_VER_RES=320
	-DSDL_ZOOM=1
	-DLV_SDL_INCLUDE_PATH="\"SDL2/SDL.h\""
	-DLV_USE_LOG=1
	
	-DLV_MEM_CUSTOM=1
	-DLV_MEM_SIZE="(128U * 1024U)"
lib_deps = 
	${env.lib_deps}

lib_archive = false
build_src_filter = 
	${env.build_src_filter}
	+<../src/application/client/>
	+<../src/platform/sdl/lcd_client/>
	
